# Build the project and run tests
trigger:
- development

variables:
  ImageName: 'zhzhelev/carpooling:$(Build.BuildId)'

pool:
  vmImage: ubuntu-latest
stages:
- stage: Build
  displayName: Scan
  jobs:  
  - job: Build
    displayName: Buidl and push Docker image
    steps:  
    - task: Gradle@2
      displayName: Gradle build
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'build'
    - task: SnykSecurityScan@1
      displayName: Scan for security vulnerabilities
      inputs:
        serviceConnectionEndpoint: 'snyk'
        testType: 'app'
        monitorWhen: 'always'
        failOnIssues: false
        projectName: carpooling
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'sonarcloud-carpooling'
        scannerMode: 'MSBuild'
        projectKey: 'ZhivkoDevOpsProjects_Carpooling'
        projectName: 'carpooling'
    - task: SonarQubeAnalyze@5
    - task: SonarQubePublish@5
      inputs:
        pollingTimeoutSec: '300'
    - task: Docker@1
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Reg'
        command: 'Build an image'
        dockerFile: '**/Dockerfile'
        imageName: '$(ImageName)'
        displayName: 'Build the Docker image'
    - task: Docker@1
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Reg'
        command: 'Push an image'
        imageName: '$(ImageName)'
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
        displayName: 'Push the Docker image to Dockerhub'