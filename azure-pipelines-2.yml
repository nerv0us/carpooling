# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- development

variables:
  ImageName: 'zhzhelev/carpooling:$(Build.BuildId)'

pool:
  vmImage: ubuntu-latest
stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build and push Docker image
    steps:  
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'build'  
    # - task: Docker@1      
    #   inputs:
    #     containerregistrytype: 'Container Registry'
    #     dockerRegistryEndpoint: 'Docker Reg'
    #     command: 'Build an image'
    #     dockerFile: '**/Dockerfile'
    #     # tags: 'zhzhelev/carpooling:1'
    #     imageName: '$(ImageName)'
    #     # useDefaultContext: false
    #     # buildContext: 'CustomerApi'
    #     displayName: 'Build the Docker image'
    # - task: Docker@1      
    #   inputs:
    #     containerregistrytype: 'Container Registry'
    #     dockerRegistryEndpoint: 'Docker Reg'
    #     command: 'Push an image'
    #     # tags: 'zhzhelev/carpooling:1'
    #     imageName: '$(ImageName)'
    #   condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    #   displayName: 'Push the Docker image to Dockerhub'
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'